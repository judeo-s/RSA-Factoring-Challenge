#!/usr/bin/python3

import sys
from typing import Tuple


def calculate_gcd(a: int, b: int) -> int:
    while b:
        a, b = b, a % b
    return a


def pollards_rho_factorization(n: int) -> Tuple[int, int]:
    if n % 2 == 0:
        return 2, n // 2

    x, y, d = 2, 2, 1
    f = lambda x: (x**2 + 1) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = calculate_gcd(abs(x - y), n)

    return d, n // d


def factorize_number(number: int) -> Tuple[int, int]:
    if number <= 1:
        return number, 1
    else:
        return pollards_rho_factorization(number)


def main(filename: str) -> None:
    try:
        with open(filename, "r") as file:
            for line in file:
                current_number = int(line.strip())
                factor1, factor2 = factorize_number(current_number)
                print(f"{current_number}={factor1}*{factor2}")
    except FileNotFoundError:
        print(f"Error: File '{filename}' not found.")
    except ValueError:
        print(
            "Error: Invalid content in the file. "
            + "Please ensure all lines contain valid natural "
            + "numbers greater than 1."
        )


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: factors file")
        sys.exit(1)

    input_filename = sys.argv[1]
    main(input_filename)
